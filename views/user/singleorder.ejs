<%- include('navbar') %>

    <style>
        .page-wrapper {
            padding-top: 53px;
        }

        .order-image {
            width: 80px;
            height: auto;
        }

        .info-section {
            background-color: white;
            padding: 20px;
            margin-bottom: 20px;
        }

        .order-status {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .status-item {
            text-align: center;
            position: relative;
            z-index: 1;
            flex: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .status-icon {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: #ccc;
            margin-bottom: 5px;
            position: relative;
            z-index: 2;
        }

        .status-container {
            display: flex;
            justify-content: space-between;
            position: relative;
            padding: 0 15px;
            width: 100%;
        }

        .status-container::before {
            content: '';
            position: absolute;
            top: 15px;
            left: calc(12.5% + 15px);
            right: calc(12.5% + 15px);
            height: 2px;
            background-color: #ccc;
            z-index: 0;
        }

        .status-item.active .status-icon {
            background-color: #28a745;
        }

        .invoice-button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 4px;
        }

        .swal-wide {
            width: 600px !important;
            font-size: 16px !important;
        }

        .swal-wide .swal2-content {
            font-size: 18px !important;
        }


        .large-modal {
            max-width: 90% !important;
            width: 50em !important;
        }

        .large-content {
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .large-content .swal2-html-container {
            flex-grow: 1;
            overflow-y: auto;
        }

        .large-modal .swal2-select,
        .large-modal .swal2-textarea {
            width: 100% !important;
            margin-bottom: 10px;
        }

        .large-modal .swal2-textarea {
            height: 100px !important;
        }
    </style>

    <!-- Breadcrumb section -->
    <section class="breadcrumb__section breadcrumb__bg">
        <div class="container">
            <div class="row row-cols-1">
                <div class="col">
                    <div class="breadcrumb__content text-center">
                        <h1 class="breadcrumb__content--title text-white mb-25">Order Details</h1>
                        <ul class="breadcrumb__content--menu d-flex justify-content-center">
                            <li class="breadcrumb__content--menu__items"><a class="text-white" href="/">Home</a>
                            </li>
                            <li class="breadcrumb__content--menu__items"><a class="text-white" href="/orders">Orders</a>
                            </li>
                            <li class="breadcrumb__content--menu__items"><span class="text-white">Order #<%=
                                        orderDetails.orderId %></span></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- End breadcrumb section -->

    <div class="page-wrapper">
        <main class="main">
            <div class="container py-5">
                <div class="row">
                    <!-- Order details section start -->
                    <div class="col-12 info-section shadow">
                        <h3>User Information</h3>
                        <% if(orderDetails) { %>
                            <p><strong>Name:</strong>
                                <%= orderDetails.deliveryAddress[0].name %>
                            </p>
                            <p><strong>Phone:</strong>
                                <%= orderDetails.deliveryAddress[0].mobile %>
                            </p>
                            <p><strong>Address:</strong>
                                <%= orderDetails.deliveryAddress[0].street%>,
                                    <%= orderDetails.deliveryAddress[0].city %>,
                                        <%= orderDetails.deliveryAddress[0].state %>,
                                            <%= orderDetails.deliveryAddress[0].pincode %>
                            </p>
                            <p><strong>Date:</strong>
                                <%= new Date(orderDetails.createdAt).toLocaleDateString("en-US") %>
                            </p>
                            <% } %>
                    </div>

                    <!-- Order Details and Status Column -->
                    <div class="col-12 info-section shadow mt-4">
                        <h3>Order Details</h3>
                        <input type="hidden" id="paymentMethod" value="<%= orderDetails.paymentMethod %>">
                        <input type="hidden" id="orderId" value="<%= orderDetails._id %>">

                        <!-- Ordered Product Details -->

                        <!-- Product Details -->
                        <% orderDetails.orderedItem.forEach(function(product) { %>
                            <div class="row mb-4">
                                <% if(product.productStatus=="delivered" || product.productStatus=="returned" ) { %>
                                    <div class="col-12 d-flex justify-content-end mb-3">
                                        <a href="/invoice?orderId=<%= orderDetails._id %>&productId=<%= product.productId._id %>"
                                            class="invoice-button">
                                            <i class="fas fa-file-invoice-dollar"></i> Invoice
                                        </a>
                                    </div>
                                    <% } %>

                                        <div class="col-md-6">
                                            <div class="d-flex align-items-center">
                                                <img src="<%= product.productId.image[0] %>" alt="Product Image"
                                                    class="order-image me-3">
                                                <div>
                                                    <h6 class="m-0">
                                                        <%= product.productId.name %>
                                                    </h6>
                                                    <small class="text-muted">Size: <%= product.size %></small>
                                                    <div>Quantity: <%= product.quantity %>
                                                    </div>
                                                    <div>Price: â‚¹<%= product.totalProductPrice %>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <% if(orderDetails.paymentStatus !=="pending" ||
                                            orderDetails.paymentMethod==="COD" ) { %>
                                            <div class="col-md-6 d-flex justify-content-end align-items-start">
                                                <input type="hidden" class="productId"
                                                    value="<%= product.productId._id %>">
                                                <input type="hidden" class="status"
                                                    value="<%= product.productStatus %>">
                                                <% if (product.productStatus==="delivered" ) { %>
                                                    <button class="btn btn-outline-primary">Return</button>
                                                    <% } else if (product.productStatus !=="cancelled" &&
                                                        product.productStatus !=="returned" && product.productStatus !== "return rejected" ) { %>
                                                        <a href="#" class="btn btn-outline-primary me-2 cancel-order"
                                                            data-product-id="<%= product.productId._id %>">
                                                            <i class="fa-solid fa-xmark"></i> Cancel
                                                        </a>
                                                        <% } %>
                                            </div>
                                            <% } %>
                            </div>


                            <% if(orderDetails.paymentStatus !=="pending" || orderDetails.paymentMethod==="COD" ) { %>
                                <span
                                    class="status-text 
                                        <%= product.productStatus === 'cancelled' ? 'text-danger' : 
                                           product.productStatus === 'delivered' ? 'text-success' : 
                                           product.productStatus === 'Shipped' ? 'text-warning' : 'text-primary' %> fw-bold">
                                    Status: <%= product.productStatus==='Shipped' ? 'Shipped' :
                                        (product.productStatus.charAt(0).toUpperCase() + product.productStatus.slice(1))
                                        %>
                                </span>
                                <% } %>

                                    <hr class="my-4">
                                    <% }); %>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const cancelButtons = document.querySelectorAll('.cancel-order');

            cancelButtons.forEach((cancelBtn) => {
                cancelBtn.addEventListener('click', function (e) {
                    e.preventDefault();
                    const productId = this.getAttribute('data-product-id');
                    const orderId = document.getElementById('orderId').value.trim();
                    const paymentMethod = document.getElementById('paymentMethod').value;

                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this cancellation!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, cancel it!',
                        cancelButtonText: 'No, keep it',
                        customClass: {
                            popup: 'swal-wide'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/cancelproduct`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ orderId, productId, paymentMethod })
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Network response was not ok');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            title: 'Cancelled!',
                                            text: 'Your item has been cancelled successfully.',
                                            icon: 'success',
                                            customClass: {
                                                popup: 'swal-wide'
                                            }
                                        }).then(() => {
                                            // Update UI
                                            this.classList.add('d-none');  // Hide cancel button

                                            // Hide return button if it exists
                                            const returnButton = this.closest('.row').querySelector('.btn-outline-primary');
                                            if (returnButton && returnButton.textContent.trim() === 'Return') {
                                                returnButton.classList.add('d-none');
                                            }

                                            // Update status text
                                            const statusText = this.closest('.row').querySelector('.status-text');
                                            if (statusText) {
                                                statusText.textContent = 'Status: Cancelled';
                                                statusText.className = 'status-text text-danger fw-bold';
                                            }
                                        });
                                    } else {
                                        throw new Error(data.message || 'Failed to cancel the product');
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    Swal.fire({
                                        title: 'Error!',
                                        text: `An error occurred: ${error.message}`,
                                        icon: 'error',
                                        customClass: {
                                            popup: 'swal-wide'
                                        }
                                    });
                                });
                        }
                    });
                });
            });
        });
    </script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            console.log('DOM loaded');

            // Return functionality
            const returnButtons = document.querySelectorAll('.btn-outline-primary');

            returnButtons.forEach(button => {
                if (button.textContent.trim() === 'Return') {
                    button.addEventListener('click', function (e) {
                        e.preventDefault();
                        const productId = this.closest('.row').querySelector('.productId').value;
                        const orderId = document.getElementById('orderId').value;
                        const paymentMethod = document.getElementById('paymentMethod').value;

                        Swal.fire({
                            title: 'Return Item',
                            html: `
                        <select id="returnReason" class="swal2-select">
                            <option value="">Choose reason...</option>
                            <option value="damaged">Item was damaged</option>
                            <option value="incorrect">Incorrect item was sent</option>
                            <option value="other">Other</option>
                        </select>
                        <textarea id="otherReason" class="swal2-textarea" placeholder="Please specify..." style="display: none;"></textarea>
                    `,
                            focusConfirm: false,
                            showCancelButton: true,
                            confirmButtonText: 'Confirm Return',
                            cancelButtonText: 'Cancel',
                            width: '50em', // Increased width
                            heightAuto: false,
                            height: '40em', // Set a fixed height
                            customClass: {
                                popup: 'large-modal',
                                content: 'large-content'
                            },
                            didOpen: () => {
                                const returnReasonSelect = Swal.getPopup().querySelector('#returnReason');
                                const otherReasonInput = Swal.getPopup().querySelector('#otherReason');

                                returnReasonSelect.addEventListener('change', function () {
                                    otherReasonInput.style.display = this.value === 'other' ? 'block' : 'none';
                                });
                            },
                            preConfirm: () => {
                                const returnReasonSelect = Swal.getPopup().querySelector('#returnReason');
                                const returnReason = returnReasonSelect.value;
                                const returnReasonText = returnReason ? returnReasonSelect.options[returnReasonSelect.selectedIndex].text:'';
                                const otherReason = Swal.getPopup().querySelector('#otherReason').value;

                                if (!returnReason) {
                                    Swal.showValidationMessage('Please select a reason for return');
                                    return false;
                                }
                                if (returnReason === 'other' && !otherReason.trim()) {
                                    Swal.showValidationMessage('Please specify a reason for return');
                                    return false;
                                }
                                return { returnReason, otherReason };
                            }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const { returnReason, otherReason } = result.value;
                                const finalReason = returnReason === 'other' ? otherReason : returnReason;

                                // Send return request to server
                                fetch('/returnorder', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        selectedReason: finalReason,
                                        productId,
                                        orderId,
                                        paymentMethod
                                    })
                                })
                                    .then(response => response.json())
                                    .then((data) => {
                                        if (data.success) {
                                            Swal.fire({
                                                position: "top",
                                                icon: "success",
                                                title: "Return request initiated successfully",
                                                text:"Your return request has been initiated",
                                                showConfirmButton: false,
                                                timer: 1500
                                            }).then(() => {
                                                // Update UI to reflect the returned status
                                                const statusText = this.closest('.row').querySelector('.status-text');
                                                if (statusText) {
                                                    statusText.textContent = 'Status: Returned Initiated';
                                                    statusText.className = 'status-text text-danger fw-bold';
                                                }

                                                // Hide the return button
                                                this.style.display = 'none';
                                            });
                                        } else {
                                            Swal.fire({
                                                title: 'Error!',
                                                text: 'Failed to return the item.',
                                                icon: 'error',
                                                customClass: {
                                                    popup: 'swal-wide'
                                                }
                                            });
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        Swal.fire({
                                            title: 'Error!',
                                            text: 'An error occurred while processing the return.',
                                            icon: 'error',
                                            customClass: {
                                                popup: 'swal-wide'
                                            }
                                        });
                                    });
                            }
                        });
                    });
                }
            });
        });
    </script>




    <%- include('footer') %>